version: "2.9.2"

x-common: &common
  build:
    context: ./airflow  
    dockerfile: Dockerfile
  user: "${AIRFLOW_UID}:0"
  env_file:
    - .env
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./dbt/datawarehouse:/opt/airflow/dbt/datawarehouse
    - ./dbt/docs:/opt/airflow/docs
    - ~/.ssh:/root/.ssh
    - /var/run/docker.sock:/var/run/docker.sock
  networks:
    - airflow-network

x-depends-on: &depends-on
  depends_on:
    airflow-postgres:
      condition: service_healthy
    redis:
      condition: service_started
    airflow-init:
      condition: service_completed_successfully

services:
  # Data Warehouse and Analytics Services
  postgres:
    image: postgres:13
    container_name: dw_postgres
    environment:
      - POSTGRES_USER=${DW_POSTGRES_USER}
      - POSTGRES_PASSWORD=${DW_POSTGRES_PASSWORD}
      - POSTGRES_DB=${DW_DATABASE_NAME}
    volumes:
      - "./dw_postgres_data:/var/lib/postgresql/data:rw"
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DW_POSTGRES_USER} -d ${DW_DATABASE_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - airflow-network

  pgadmin-management:
    image: dpage/pgadmin4
    container_name: dw_pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${DW_ADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${DW_ADMIN_PASSWORD}
    ports:
      - "5050:80"
    restart: unless-stopped
    depends_on:
      - datawarehouse
    networks:
      - airflow-network

  metabase:
    image: metabase/metabase:latest
    container_name: dw_metabase
    ports:
      - "3000:3000"
    volumes:
      - metabase_data:/metabase
    environment:
      - MB_DB_TYPE=postgres
      - MB_DB_DBNAME=${DW_DATABASE_NAME}
      - MB_DB_PORT=5432
      - MB_DB_USER=${DW_POSTGRES_USER}
      - MB_DB_PASS=${DW_POSTGRES_PASSWORD}
      - MB_DB_HOST=datawarehouse
    depends_on:
      - datawarehouse
    restart: unless-stopped
    networks:
      - airflow-network

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - airflow-network

  flower:
    <<: [*common, *depends-on]
    container_name: airflow-flower
    restart: unless-stopped
    command: celery flower
    ports:
      - "5555:5555"

  scheduler:
    <<: [*common, *depends-on]
    container_name: airflow-scheduler
    command: scheduler
    restart: unless-stopped
    ports:
      - "8793:8793"

  webserver:
    <<: [*common, *depends-on]
    container_name: airflow-webserver
    restart: unless-stopped
    command: webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      retries: 5

  worker:
    <<: [*common, *depends-on]
    container_name: airflow-worker
    restart: unless-stopped
    command:
      - celery
      - worker

  airflow-init:
    <<: *common
    container_name: airflow-init
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /sources/logs /sources/dags /sources/plugins
        chown -R "${AIRFLOW_UID}:0" /sources/{logs,dags,plugins}
        exec /entrypoint airflow version

networks:
  airflow-network:

volumes:
  dw_postgres_data:
  metabase_data:
  airflow_postgres_data: